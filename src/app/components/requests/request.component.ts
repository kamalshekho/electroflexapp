import { Component, OnInit } from '@angular/core';
import { AgGridAngular } from 'ag-grid-angular';
import { ColDef } from 'ag-grid-community';
import { MatButtonModule } from '@angular/material/button';
import { Request, RequestStatus } from '../../core/model/request.model';
import { MatDialog } from '@angular/material/dialog';
import { RequestFormComponent } from './request-form/request-form.component';
import { RequestsService } from '../../core/services/requests.service';

@Component({
  selector: 'app-requests',
  imports: [AgGridAngular, MatButtonModule],
  templateUrl: './request.component.html',
  styleUrl: './request.component.css',
})
export class RequestComponent implements OnInit {
  rowData: Request[] = [];

  /*
  rowData: Request[] = [
    {
      id: 1,
      street: 'Musterstraße',
      houseNumber: '12a',
      postCode: 12345,
      city: 'Berlin',
      desiredDate: '2025-08-01',
      desiredTime: '14:00',
      customerFirstName: 'Max',
      customerLastName: 'Mustermann',
      email: 'max@example.com',
      phone: '0123456789',
      serviceType: 'Installation',
      description: 'Neue Steckdose',
      createdDate: '2025-07-01',
      status: RequestStatus.OPEN,
      electricianId: 1,
      createdTime: '09:30',
    },
    {
      id: 2,
      street: 'Bahnhofstraße',
      houseNumber: '3',
      postCode: 54321,
      city: 'Hamburg',
      desiredDate: '2025-08-03',
      desiredTime: '09:30',
      customerFirstName: 'Anna',
      customerLastName: 'Schmidt',
      email: 'anna.schmidt@example.com',
      phone: '0987654321',
      serviceType: 'Reparatur',
      description: 'Leck im Wasserhahn',
      createdDate: '2025-07-02',
      createdTime: '2025-07-02T15:20:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 3,
      street: 'Hauptstraße',
      houseNumber: '7',
      postCode: 67890,
      city: 'München',
      desiredDate: '2025-08-05',
      desiredTime: '11:00',
      customerFirstName: 'Lisa',
      customerLastName: 'Fischer',
      email: 'lisa.fischer@example.com',
      phone: '01711234567',
      serviceType: 'Wartung',
      description: 'Heizung kontrollieren',
      createdDate: '2025-07-03',
      createdTime: '2025-07-03T08:45:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 4,
      street: 'Parkallee',
      houseNumber: '15b',
      postCode: 11223,
      city: 'Köln',
      desiredDate: '2025-08-10',
      desiredTime: '13:15',
      customerFirstName: 'Thomas',
      customerLastName: 'Becker',
      email: 'thomas.becker@example.com',
      phone: '0221123456',
      serviceType: 'Notdienst',
      description: 'Stromausfall im Wohnzimmer',
      createdDate: '2025-07-04',
      createdTime: '2025-07-04T18:30:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 5,
      street: 'Gartenweg',
      houseNumber: '8',
      postCode: 33445,
      city: 'Dresden',
      desiredDate: '2025-08-06',
      desiredTime: '10:00',
      customerFirstName: 'Julia',
      customerLastName: 'Neumann',
      email: 'julia.neumann@example.com',
      phone: '0351223344',
      serviceType: 'Installation',
      description: 'Neuer Wasseranschluss',
      createdDate: '2025-07-05',
      createdTime: '2025-07-05T12:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: 1,
    },
    {
      id: 6,
      street: 'Lindenstraße',
      houseNumber: '21',
      postCode: 44556,
      city: 'Frankfurt',
      desiredDate: '2025-08-08',
      desiredTime: '16:00',
      customerFirstName: 'Martin',
      customerLastName: 'Klein',
      email: 'martin.klein@example.com',
      phone: '0691234567',
      serviceType: 'Reparatur',
      description: 'Heizung heizt nicht',
      createdDate: '2025-07-06',
      createdTime: '2025-07-06T09:30:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 7,
      street: 'Bergstraße',
      houseNumber: '5',
      postCode: 55667,
      city: 'Stuttgart',
      desiredDate: '2025-08-07',
      desiredTime: '08:45',
      customerFirstName: 'Nina',
      customerLastName: 'Wolf',
      email: 'nina.wolf@example.com',
      phone: '0711234567',
      serviceType: 'Wartung',
      description: 'Sicherungskasten prüfen',
      createdDate: '2025-07-07',
      createdTime: '2025-07-07T14:15:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 8,
      street: 'Schulstraße',
      houseNumber: '10',
      postCode: 66778,
      city: 'Leipzig',
      desiredDate: '2025-08-09',
      desiredTime: '15:30',
      customerFirstName: 'Oliver',
      customerLastName: 'Schneider',
      email: 'oliver.schneider@example.com',
      phone: '0341234567',
      serviceType: 'Notdienst',
      description: 'Rohrbruch im Keller',
      createdDate: '2025-07-08',
      createdTime: '2025-07-08T11:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 9,
      street: 'Friedrichstraße',
      houseNumber: '4',
      postCode: 77889,
      city: 'Bremen',
      desiredDate: '2025-08-12',
      desiredTime: '12:00',
      customerFirstName: 'Sabine',
      customerLastName: 'Lang',
      email: 'sabine.lang@example.com',
      phone: '0421123456',
      serviceType: 'Installation',
      description: 'Neue Heizung installieren',
      createdDate: '2025-07-09',
      createdTime: '2025-07-09T13:40:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 10,
      street: 'Wilhelmstraße',
      houseNumber: '18',
      postCode: 88990,
      city: 'Nürnberg',
      desiredDate: '2025-08-11',
      desiredTime: '10:30',
      customerFirstName: 'Frank',
      customerLastName: 'Becker',
      email: 'frank.becker@example.com',
      phone: '0911987654',
      serviceType: 'Reparatur',
      description: 'Lampe flackert',
      createdDate: '2025-07-10',
      createdTime: '2025-07-10T16:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: 1,
    },
    {
      id: 11,
      street: 'Rosenweg',
      houseNumber: '2',
      postCode: 33444,
      city: 'Dortmund',
      desiredDate: '2025-08-13',
      desiredTime: '14:45',
      customerFirstName: 'Katrin',
      customerLastName: 'Maier',
      email: 'katrin.maier@example.com',
      phone: '0231234567',
      serviceType: 'Wartung',
      description: 'Kalk entfernen',
      createdDate: '2025-07-11',
      createdTime: '2025-07-11T10:30:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 12,
      street: 'Schillerstraße',
      houseNumber: '30',
      postCode: 44555,
      city: 'Essen',
      desiredDate: '2025-08-14',
      desiredTime: '09:00',
      customerFirstName: 'Jürgen',
      customerLastName: 'Fuchs',
      email: 'juergen.fuchs@example.com',
      phone: '0201234567',
      serviceType: 'Notdienst',
      description: 'Heizung ausgefallen',
      createdDate: '2025-07-12',
      createdTime: '2025-07-12T11:20:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 13,
      street: 'Goethestraße',
      houseNumber: '14',
      postCode: 55666,
      city: 'Düsseldorf',
      desiredDate: '2025-08-15',
      desiredTime: '13:00',
      customerFirstName: 'Andrea',
      customerLastName: 'Schwarz',
      email: 'andrea.schwarz@example.com',
      phone: '0211123456',
      serviceType: 'Installation',
      description: 'Außenbeleuchtung installieren',
      createdDate: '2025-07-13',
      createdTime: '2025-07-13T14:00:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 14,
      street: 'Mozartstraße',
      houseNumber: '9',
      postCode: 66777,
      city: 'Hannover',
      desiredDate: '2025-08-16',
      desiredTime: '15:00',
      customerFirstName: 'Stefan',
      customerLastName: 'Krause',
      email: 'stefan.krause@example.com',
      phone: '0511234567',
      serviceType: 'Reparatur',
      description: 'Toilette verstopft',
      createdDate: '2025-07-14',
      createdTime: '2025-07-14T09:45:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 15,
      street: 'Kaiserstraße',
      houseNumber: '11',
      postCode: 77888,
      city: 'Mannheim',
      desiredDate: '2025-08-17',
      desiredTime: '08:30',
      customerFirstName: 'Monika',
      customerLastName: 'Bauer',
      email: 'monika.bauer@example.com',
      phone: '0621123456',
      serviceType: 'Wartung',
      description: 'Heizung entlüften',
      createdDate: '2025-07-15',
      createdTime: '2025-07-15T10:15:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 16,
      street: 'Fasanenweg',
      houseNumber: '6',
      postCode: 88991,
      city: 'Freiburg',
      desiredDate: '2025-08-18',
      desiredTime: '17:00',
      customerFirstName: 'Peter',
      customerLastName: 'Schulz',
      email: 'peter.schulz@example.com',
      phone: '0761123456',
      serviceType: 'Notdienst',
      description: 'Kurzschluss in der Küche',
      createdDate: '2025-07-16',
      createdTime: '2025-07-16T12:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 17,
      street: 'Birkenweg',
      houseNumber: '19',
      postCode: 99000,
      city: 'Erfurt',
      desiredDate: '2025-08-19',
      desiredTime: '13:45',
      customerFirstName: 'Sandra',
      customerLastName: 'Wagner',
      email: 'sandra.wagner@example.com',
      phone: '0361123456',
      serviceType: 'Installation',
      description: 'Neuer Wasserhahn',
      createdDate: '2025-07-17',
      createdTime: '2025-07-17T11:30:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 18,
      street: 'Marktstraße',
      houseNumber: '22',
      postCode: 44557,
      city: 'Kassel',
      desiredDate: '2025-08-20',
      desiredTime: '10:00',
      customerFirstName: 'Tobias',
      customerLastName: 'Hartmann',
      email: 'tobias.hartmann@example.com',
      phone: '0561123456',
      serviceType: 'Reparatur',
      description: 'Thermostat defekt',
      createdDate: '2025-07-18',
      createdTime: '2025-07-18T09:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 19,
      street: 'Schlossweg',
      houseNumber: '13',
      postCode: 55668,
      city: 'Regensburg',
      desiredDate: '2025-08-21',
      desiredTime: '14:15',
      customerFirstName: 'Claudia',
      customerLastName: 'Neubauer',
      email: 'claudia.neubauer@example.com',
      phone: '0941123456',
      serviceType: 'Wartung',
      description: 'Elektrische Anlage prüfen',
      createdDate: '2025-07-19',
      createdTime: '2025-07-19T15:00:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 20,
      street: 'Glockenstraße',
      houseNumber: '17',
      postCode: 66779,
      city: 'Würzburg',
      desiredDate: '2025-08-22',
      desiredTime: '16:30',
      customerFirstName: 'Andreas',
      customerLastName: 'Lorenz',
      email: 'andreas.lorenz@example.com',
      phone: '0931123456',
      serviceType: 'Notdienst',
      description: 'Wasserrohrbruch',
      createdDate: '2025-07-20',
      createdTime: '2025-07-20T17:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 21,
      street: 'Rathausplatz',
      houseNumber: '1',
      postCode: 77892,
      city: 'Heidelberg',
      desiredDate: '2025-08-23',
      desiredTime: '11:15',
      customerFirstName: 'Marina',
      customerLastName: 'Friedrich',
      email: 'marina.friedrich@example.com',
      phone: '0621123444',
      serviceType: 'Installation',
      description: 'Neue Wärmepumpe',
      createdDate: '2025-07-21',
      createdTime: '2025-07-21T08:45:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 22,
      street: 'Schloßstraße',
      houseNumber: '20',
      postCode: 88992,
      city: 'Mainz',
      desiredDate: '2025-08-24',
      desiredTime: '13:30',
      customerFirstName: 'Daniel',
      customerLastName: 'Zimmermann',
      email: 'daniel.zimmermann@example.com',
      phone: '0613123456',
      serviceType: 'Reparatur',
      description: 'Defekte Steckdose',
      createdDate: '2025-07-22',
      createdTime: '2025-07-22T12:00:00Z',
      status: RequestStatus.COMPLETED,
      electricianId: 1,
    },
    {
      id: 23,
      street: 'Lindenweg',
      houseNumber: '28',
      postCode: 99001,
      city: 'Erfurt',
      desiredDate: '2025-08-25',
      desiredTime: '09:15',
      customerFirstName: 'Eva',
      customerLastName: 'Kuhn',
      email: 'eva.kuhn@example.com',
      phone: '0361123457',
      serviceType: 'Wartung',
      description: 'Duschkopf austauschen',
      createdDate: '2025-07-23',
      createdTime: '2025-07-23T10:30:00Z',
      status: RequestStatus.OPEN,
      electricianId: undefined,
    },
    {
      id: 24,
      street: 'Bergblick',
      houseNumber: '7',
      postCode: 44558,
      city: 'Kassel',
      desiredDate: '2025-08-26',
      desiredTime: '14:00',
      customerFirstName: 'Martin',
      customerLastName: 'Lange',
      email: 'martin.lange@example.com',
      phone: '0561123457',
      serviceType: 'Notdienst',
      description: 'Heizung fällt immer wieder aus',
      createdDate: '2025-07-24',
      createdTime: '2025-07-24T15:00:00Z',
      status: RequestStatus.IN_PROGRESS,
      electricianId: 1,
    },
    {
      id: 25,
      street: 'Parkstraße',
      houseNumber: '3a',
      postCode: 33446,
      city: 'Dortmund',
      desiredDate: '2025-08-27',
      desiredTime: '11:30',
      customerFirstName: 'Susanne',
      customerLastName: 'Wolf',
      email: 'susanne.wolf@example.com',
      phone: '0231234568',
      serviceType: 'Installation',
      description: 'Neue Außensteckdose',
      createdDate: '2025-07-25',
      createdTime: '2025-07-25T10:00:00Z',
      status: RequestStatus.OPEN,
      electricianId: 1,
    },
  ];
*/

  colDefs: ColDef[] = [
    {
      field: 'id',
      headerName: 'ID',
      filter: 'agNumberColumnFilter',
      width: 70,
      cellStyle: {
        color: 'grey',
        fontSize: '12px',
      },
    },
    {
      field: 'customerFirstName',
      headerName: 'First Name',
      filter: 'agTextColumnFilter',
      floatingFilter: true,
    },
    {
      field: 'customerLastName',
      headerName: 'Last Name',
      filter: 'agTextColumnFilter',
      floatingFilter: true,
    },
    {
      field: 'status',
      headerName: 'Status',
      filter: 'agTextColumnFilter',
      width: 130,
      cellStyle: (params) => {
        const status = params.value as RequestStatus;
        switch (status) {
          case RequestStatus.OPEN:
            return {
              backgroundColor: '#80b9ff',
              color: 'black',
              fontWeight: '',
            };
          case RequestStatus.IN_PROGRESS:
            return {
              backgroundColor: '#ffd380',
              color: 'black',
              fontWeight: '',
            };
          case RequestStatus.COMPLETED:
            return {
              backgroundColor: '#80ff80',
              color: 'black',
              fontWeight: '',
            };
          case RequestStatus.CANCELLED:
            return {
              backgroundColor: '#d32f2f',
              color: 'black',
              fontWeight: '',
            };
          case RequestStatus.CLOSED:
            return {
              backgroundColor: '#80ff80',
              color: 'black',
              fontWeight: '',
            };
          default:
            return {
              backgroundColor: 'grey',
              color: 'black',
              fontWeight: '',
            };
        }
      },
    },
    {
      field: 'creationDate',
      headerName: 'Creation Date',
      filter: 'agDateColumnFilter',
      sortable: true,
    },
    {
      field: 'creationTime',
      headerName: 'Creation Time',
      filter: 'agDateColumnFilter',
      sortable: true,
    },
    {
      field: 'street',
      headerName: 'Street',
      filter: 'agTextColumnFilter',
      sortable: true,
      width: 150,
    },
    {
      field: 'houseNumber',
      headerName: 'Haus Number',
      filter: 'agTextColumnFilter',
      sortable: true,
      width: 80,
      cellStyle: {
        textAlign: 'center',
        fontSize: '13px',
      },
    },
    {
      field: 'city',
      headerName: 'City',
      filter: 'agTextColumnFilter',
    },

    {
      field: 'postCode',
      headerName: 'Post Code',
      filter: 'agNumberColumnFilter',
      width: 100,
      floatingFilter: true,
    },
    {
      field: 'desiredDate',
      headerName: 'Desired Date',
      filter: 'agDateColumnFilter',
      cellStyle: {
        backgroundColor: '#e3f2fd',
        fontWeight: 'bold',
      },
      floatingFilter: true,
    },
    {
      field: 'desiredTime',
      headerName: 'Desired Time',
      filter: 'agTextColumnFilter',
    },
    {
      field: 'serviceType',
      headerName: 'Service Type',
      filter: 'agTextColumnFilter',
      cellStyle: {
        fontWeight: 'bold',
        backgroundColor: '#f5f5f5',
      },
    },
    {
      field: 'electricianNumber',
      headerName: 'Electrician',
      filter: 'agTextColumnFilter',
      cellStyle: {
        fontWeight: 'bold',
      },
    },
  ];

  constructor(
    private dialog: MatDialog,
    private requestService: RequestsService,
  ) {}

  ngOnInit(): void {
    this.loadRequests();
  }

  openCreateRequestDialog(): void {
    const dialogRef = this.dialog.open(RequestFormComponent, {
      width: '1100px',
      maxHeight: '125vh',
      data: {},
    });
  }

  loadRequests(): void {
    this.requestService.getAllRequests().subscribe({
      next: (requests) => {
        this.rowData = requests;
      },
      error: (err) => {
        console.error('Error!', err);
      },
    });
  }
}
